@model SignUpViewModel

@{
    ViewData["Title"] = "Sign Up";
    Layout = "_SignLayout";
}

@using (Html.BeginForm("SignUp", "Account", FormMethod.Post, new { @class = "sign-form" }))
{
    @Html.AntiForgeryToken()

    <h3 class="fw-normal mb-3 pb-3" style="letter-spacing: 1px;">Sign Up</h3>

    <div class="form-outline mb-4">
        <label class="form-label" for="email">Email address</label>
        @Html.TextBoxFor(m => m.Email, new { @class = "form-control form-control-lg", placeholder = "e.g., example@mail.com"})
        @Html.ValidationMessageFor(m => m.Email)
    </div>

    <div class="form-outline mb-4">
        <label class="form-label" for="username">Username</label>
        @Html.TextBoxFor(m => m.Username, new { @class = "form-control form-control-lg", placeholder = "e.g., rssUser"})
        @Html.ValidationMessageFor(m => m.Username)
    </div>

    <div class="form-outline mb-4">
        <label class="form-label" for="password">Password</label>
        @Html.PasswordFor(m => m.Password, new { @class = "form-control form-control-lg", placeholder = "e.g., · · · · · · · ·"})
        @Html.ValidationMessageFor(m => m.Password)
    </div>

    <div class="form-outline mb-4">
        <label class="form-label" for="cpassword">Confirm Password</label>
        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control form-control-lg", placeholder = "e.g., · · · · · · · ·"})
        @Html.ValidationMessageFor(m => m.ConfirmPassword)
    </div>

    <div class="pt-1 mb-4">
        <button class="btn btn-dark btn-lg btn-block" type="submit">Register</button>
    </div>

    <p class="mb-0">Already have an account? @Html.ActionLink("Sign In here", "SignIn", "Account", null, new { @class = "link-secondary" })</p>
}
